{
  // Place your haido workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Import scss": {
    "scope": "javascript,typescript, typescriptreact",
    "prefix": "unScss",
    "body": ["import scss from \"${1:path}\""],
    "description": "Log output to console"
  },
  "Mix Class Name": {
    "scope": "javascript,typescript, typescriptreact",
    "prefix": "unMixClass",
    "body": ["_mix([${1:prop}])"],
    "description": "Mix class name"
  },
  "Material style": {
    "scope": "javascript,typescript, typescriptreact",
    "prefix": "unMaterialStyle",
    "body": [
      "import { SxProps, Theme } from \"@mui/material\"\n\n",
      "const ${1:name} = (root: IRootConsumer | null) => {\n\t",
      "\tconst ${2:props}: SxProps<Theme>  = {\n\t\t//props\n\t}\n\treturn ${2:props}\n}\n",
      "export default ${1:name}"
    ],
    "description": "Material style"
  },
  "Add themes setting": {
    "scope": "javascript,typescript, typescriptreact",
    "prefix": "unThemes",
    "body": [
      "const themes:any = ${1:themes}(${2:params} as any)"
    ],
    "description": "Add themes setting"
  },
  "Add Root Consumer": {
    "scope": "javascript,typescript, typescriptreact",
    "prefix": "unRootConsumer",
    "body": [
      "<RootConsumer>",
      "\t{(root): any => {",
      "\t\treturn (${1:code})",
      "\t}}",
      "</RootConsumer>"
    ],
    "description": "Add themes setting"
  }
}
